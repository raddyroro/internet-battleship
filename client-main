import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.net.Socket;
import java.util.Scanner;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


public class Main implements WindowListener{
	
	public static JFrame frame = new JFrame();
	public static int serverPort;
	public static String serverAddress;
	public static Socket s;
	
	
	
	public static void main(String[] args) throws IOException {
		JFrame f = new JFrame("Battleship");
	    f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        f.setSize(400, 300);
        f.setResizable(false);
        f.setLocationByPlatform(true);
        f.setVisible(true);
	        
		
		try {
			welcomeDialog(f);
			System.out.println("Trying to connect...");
			s = new Socket(serverAddress, serverPort);
			Client client = new Client(s);
			Thread t = new Thread(client);
			t.start();
		} catch (Exception e) {
			System.out.println("Cannot detect server...");
			System.out.println("Please check if the server is online and try again");
			e.printStackTrace();
		}
	}
	
	public static void welcomeDialog(JFrame f){
		JPanel p = new JPanel(new BorderLayout(5,5));

        JPanel labels = new JPanel(new GridLayout(0,1,2,2));
        labels.add(new JLabel("IP Address", SwingConstants.RIGHT));
        labels.add(new JLabel("Port (40 Reccomended)", SwingConstants.RIGHT));
        p.add(labels, BorderLayout.WEST);

        JPanel controls = new JPanel(new GridLayout(0,1,2,2));
        JTextField IPfield = new JTextField("");
        controls.add(IPfield);
        JTextField portField = new JTextField();
        controls.add(portField);
        p.add(controls, BorderLayout.CENTER);

        //LayoutManager l = new GroupLayout(p);
        //p.setLayout(l);
        JOptionPane.showMessageDialog(
            f, p, "Welcome to Battleship", JOptionPane.QUESTION_MESSAGE);
		
        serverPort = Integer.parseInt(portField.getText());
        serverAddress = IPfield.getText();
	}

	@Override
	public void windowOpened(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowClosing(WindowEvent e) {
		try {
			Client.closeOutput();
			Client.closeInput();
			s.close();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
	}

	@Override
	public void windowClosed(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowIconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowActivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

}
